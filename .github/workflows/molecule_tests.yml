# adapted from:
# https://github.com/pulibrary/princeton_ansible/blob/main/.github/workflows/molecule_tests.yml

name: Molecule Tests

on:
  push:
  pull_request:
  schedule:
  - cron: "0 11 * * TUE"  # run automatically every tuesday at 11am

# the MOLECULE_DISTRO variable controls what distribution tests will be run
# against; it needs to be a version string like 'ubuntu1804' corresponding to
# the version strings in PUL's published docker containers available at:
# https://hub.docker.com/search?q=pulibrary&type=image
# these containers are pre-built images with ansible included.
env:
  PYTHON_VERSION: 3.8
  MOLECULE_DISTRO: ubuntu1804
  ACTIONS_SLACK_WEBHOOK: 

jobs:
  test:
    runs-on: ubuntu-latest

    # all roles in the repo need to have their folder name listed here; the
    # run_molecule.py script will determine which ones need to run at build
    # time based on their dependencies
    strategy:
      matrix:
        role:
          - build_npm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('requirements/*.txt') }}
          restore-keys: |
            pip-${{ hashFiles('requirements/*.txt') }}
            pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # - name: Disable apparmor
      #   run: |
      #     sudo service apparmor stop
      #     sudo service apparmor teardown
      #     sudo /usr/sbin/update-rc.d -f apparmor remove

      - name: Run tests
        run: |
          ROLE=${{ matrix.role }} python bin/run_molecule.py

      - name: Report status to Slack
        uses: rtCamp/action-slack-notify@master
        if: ${{ github.event_name == 'schedule' || github.event_name == 'push' }} # don't report for PR builds
        env:
          SLACK_WEBHOOK: ${{ secrets.ACTIONS_SLACK_WEBHOOK }}
          SLACK_TITLE: "Run #${{ github.run_number }} for workflow `${{ github.workflow }}`: ${{ job.status }}"
          SLACK_MESSAGE: "<https://github.com/${{ github.repository }}/|${{ github.repository }}@${{ github.ref }}>"
          SLACK_FOOTER: "<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|View commit>"
          MSG_MINIMAL: true   # use compact slack message format
