---

# GitHub settings
github_token: '{{ lookup("env", "ANSIBLE_GITHUB_TOKEN") | default("") }}'
api_base: https://api.github.com
deployments_endpoint: '{{api_base}}/repos/{{ repo }}/deployments'
deploy_environment: '{{ staging|default(None) or qa|default(None) or "production" }}'
deploy_description: 'Deploying {{ gitref }} to {{ deploy_environment }}'
# default for production contexts
deploy_contexts:
    - 'continuous-integration/travis-ci/push'
    - 'codecov/project'
    - 'codecov/patch'

# email_host_password
email_host_password: '{{ vault_email_host_password }}'

# debug setting, False for all unless overriden explicitly
debug_setting: 'False'

# generate a mezzanine nevercache key
# chooses a random number from 0 to 99999, adds a random salt, and hashes using
# sha256.
secret_key: '{{ 99999 |random|string|password_hash("sha256") }}'
nevercache_key: '{{ 99999 |random|string|password_hash("sha256") }}'

# Database configurations -- overriden by group_vars vaults as needed
db_name: '{{ vault_db_name }}'
db_password: '{{ vault_db_password }}'
# include a blank default for QA when we want localhost
db_host: '{{ vault_db_host | default("") }}'
db_username: '{{ vault_db_username }}'

# Solr configurations
solr_url: '{{ vault_solr_url }}'
solr_admin_url: '{{ vault_solr_admin_url }}'

# The template directory (as a relative path from the top of repository)
templates_dir: 'templates/'
# standard variable for all repositories that use GitHub
repo_url: 'https://www.github.com/{{ repo }}.git'
# home directory (on remote)
home: '{{ ansible_env.HOME }}'
# default to using main unless set otherwise
gitref: '{{ ref | default("main") }}'
# set default install root for all but qa
install_root: /srv/www/prod

# Clone root (where deploy user clones repo)
clone_root: "{{ home }}/repos"
# short hash for Git reference
short_hash: '{{ repo_info.after[0:6] }}'
# Path of the deploy directory. Generated from vars above and build_project_repo
deploy: '{{ install_root }}/{{ version }}-{{ short_hash }}'
# Database backup location
db_backup: '/tmp/pre-{{ version }}-{{ short_hash }}-{{ inventory_hostname_short }}.sql'
# python app version. Generated in build_project_repo
version: '{{ python_app_version.stdout }}'
# logging directory
logging_dir: '{{ install_root }}/logs'
# logging file
logging_path: '{{ logging_dir }}/{{ django_app }}.log'

# These include the path for rh-python35 and nodejs6
# Paths are picky and spaces for any YAML multiline syntax cause issues
# These are defaults for most projects and should be overriden as necessary.
path: '/opt/rh/rh-python35/root/usr/bin:/opt/rh/rh-nodejs6/root/usr/bin:{{ ansible_env.PATH }}'
ld_library_path: '/opt/rh/rh-python35/root/usr/lib64:/opt/rh/rh-nodejs6/root/usr/lib64{% if ansible_env.LD_LIBRARY_PATH is defined %}:{{ ansible_env.LD_LIBRARY_PATH }}{% endif %}'
python_path: '/opt/rh/rh-nodejs6/root/usr/lib/python2.7/site-packages{% if ansible_env.PYTHON_PATH is defined %}:{{ ansible_env.PYTHONPATH }}{% endif %}'

# currently default for most projects is 3.5
python_version: "python3.5"

# custom hook for requirements, allows for override to use lock or txt
requirements_type: 'txt'

# CSP configuration -- two urls, one for readOnly, one for enforce
# first is used in QA, rest in production
# set csp_enabled: true in project vars to enable
csp_reportonly_uri: '{{ vault_csp_reportonly_uri}}'
csp_enforce_uri: '{{ vault_csp_enforce_uri }}'

# Postgres configuration
postgres_version: 10
postgres_host: lib-postgres3.princeton.edu
