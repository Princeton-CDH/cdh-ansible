---
# tasks file for roles/solr_collection
- name: Create the base directory for Solr configsets
  ansible.builtin.file:
    path: "/solr/cdh_solr/"
    state: directory
    mode: "0755"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
  become: true
  run_once: true
  delegate_to: "{{ solr_server }}" # lib-solr-staging1.princeton.edu  # solr_staging
  tags:
    - setup
    - never

- name: Update and configure Solr configset
  block:
    - name: Copy project Solr configset files for upload to zookeeper
      # rsync configset from deployed version on remote host to solr server
      ansible.builtin.command: /usr/bin/rsync -a {{ inventory_hostname }}:{{ deploy }}/solr_conf/ /solr/cdh_solr/cdh_{{ app_name }}_solr_conf -e "ssh -o StrictHostKeyChecking=no"
      become: true
      become_user: "{{ deploy_user }}"
      delegate_to: "{{ solr_server }}"
      changed_when: false

    # no shards per node in solr 9; only run if solr version is < 9
    - name: Check replication factor configuration
      ansible.builtin.fail: msg=" replication factor is greater than three; must specify shards per node > 1"
      when:
        - solr_version < 9
        - num_shards * replication_factor > 3 and shards_per_node == 1

    - name: Update configset with zookeeper
      ansible.builtin.command: "/opt/solr/bin/solr zk -upconfig -d /solr/cdh_solr/cdh_{{ app_name }}_solr_conf -n {{ solr_configset }} -z {{ zk_host }}"
      delegate_to: "{{ solr_server }}"

    - name: Get a list of current Solr collections
      ansible.builtin.uri:
        url: "{{ solr_url }}admin/collections?action=LIST"
      register: solr_collections_list
      delegate_to: "{{ inventory_hostname }}"

    - name: Attempt to create Solr collection (may time out)
      ansible.builtin.uri:
        url: "{{ solr_url }}admin/collections?action=CREATE&name={{ solr_collection }}&collection.configName={{ solr_configset }}&numShards=1&replicationFactor=1&maxShardsPerNode=1&config=_default&timeout=600&wt=json"
        timeout: 180
      when: solr_collection not in (solr_collections_list.json.collections | default([]))
      delegate_to: "{{ inventory_hostname }}"
      register: create_result
      failed_when: false
      ignore_errors: true

    - name: Warn about collection creation failure
      ansible.builtin.debug:
        msg: >
          WARNING: Solr collection creation timed out. You may need to create the collection manually using:
          ssh {{ solr_server }} "sudo -u {{ deploy_user }} /opt/solr/bin/solr create -c {{ solr_collection }} -n {{ solr_configset }} -shards 1 -replicationFactor 1"
          and then increase replication if needed.
      when: 
        - solr_collection not in (solr_collections_list.json.collections | default([]))
        - create_result.status is defined 
        - create_result.status != 200

    # Skip remaining Solr collection tasks if collection doesn't exist
    - name: Check if collection exists after creation attempt
      ansible.builtin.uri:
        url: "{{ solr_url }}admin/collections?action=LIST"
      register: solr_collections_list_after
      delegate_to: "{{ inventory_hostname }}"

    - name: Set fact for collection created status
      ansible.builtin.set_fact:
        collection_created: "{{ solr_collection in (solr_collections_list_after.json.collections | default([])) }}"

    # Continue with remaining tasks only if collection exists
    - name: Check Solr collection status
      ansible.builtin.uri:
        url: "{{ solr_url }}admin/collections?action=COLSTATUS&collection={{ solr_collection }}&coreInfo=true"
      register: solr_collection_status
      when: collection_created | bool
      delegate_to: "{{ inventory_hostname }}"

    - name: Get collection information from collection status response
      # get collection-specific portion of the collection status response
      ansible.builtin.set_fact:
        solr_collection_info: "{{ solr_collection_status.json[ solr_collection ]}}"
      when:
        - collection_created | bool
        - solr_collection_status is defined
        - solr_collection_status.json is defined
      delegate_to: "{{ inventory_hostname }}"

    # NOTE: number of shards can't be changed via modify collection;
    # must use reindex; warning, this may be slow
    - name: Modify Solr collection number of shards if changed
      ansible.builtin.uri:
        url: "{{ solr_url }}admin/collections?action=REINDEXCOLLECTION&name={{ solr_collection }}&numShards={{ num_shards }}"
      when:
        - collection_created | bool
        - solr_version < 9
        - solr_collection_info is defined
        - solr_collection_info["activeShards"] != num_shards
      delegate_to: "{{ inventory_hostname }}"

    - name: Modify Solr collection to distribute replicas
      ansible.builtin.uri:
        url: "{{ solr_url }}admin/collections?action=MODIFYCOLLECTION&collection={{ solr_collection }}&maxShardsPerNode=1&replicationFactor={{ replication_factor }}"
        timeout: 180
      when:
        - collection_created | bool
        - solr_collection_info is defined
        - solr_collection_info["properties"]["replicationFactor"] | int != replication_factor
      delegate_to: "{{ inventory_hostname }}"
      failed_when: false
      ignore_errors: true

    - name: Get cluster status after modifying replication
      ansible.builtin.uri:
        url: "{{ solr_url }}admin/collections?action=CLUSTERSTATUS&collection={{ solr_collection }}"
      register: cluster_status
      when: collection_created | bool
      delegate_to: "{{ inventory_hostname }}"
      failed_when: false

    - name: Show replica distribution
      ansible.builtin.debug:
        msg: "Current replica distribution: {{ cluster_status.json.cluster.collections[solr_collection].shards.shard1.replicas | default('unknown') }}"
      when: 
        - collection_created | bool
        - cluster_status is defined
        - cluster_status.json is defined
        - cluster_status.json.cluster is defined
        - cluster_status.json.cluster.collections is defined
        - cluster_status.json.cluster.collections[solr_collection] is defined

    - name: Reload Solr collection if not newly created
      ansible.builtin.debug:
        msg: "Solr collection {{ solr_collection }} already exists"
      changed_when: collection_created | bool
      notify: reload solr collection
      delegate_to: "{{ inventory_hostname }}"
  run_once: true
  tags:
    - solr_configset
  rescue:
    - name: Warn about Solr configuration failure but continue deployment
      ansible.builtin.debug:
        msg: >
          WARNING: Solr configuration tasks failed but deployment will continue.
          You may need to manually configure Solr after deployment.
