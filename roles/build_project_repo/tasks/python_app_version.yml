# Determine the version of the python app being deployed
- name: Determine python app version
  tags:
    - python
  block:
    - name: Check if project has a version.py file
      stat:
        path: "{{ clone_root}}/{{ repo }}/{{ python_app }}/version.py"
      register: python_version_file

    - name: Get the version for the python package/app being deployed (app.version)
      become: true
      become_user: "{{ deploy_user }}"
      shell:
        cmd: "python3 -c 'from {{ python_app }} import version; print(version.__version__)'"
        chdir: "{{ clone_root}}/{{ repo }}"
      register: python_app_version
      # when skipped, registers a variable with info with skip / conditional info
      when:
        - python_version_file.stat.exists

    - name: debug python app version
      ansible.builtin.debug:
        msg: python_app_version = {{ python_app_version}}

    - name: Get the version for the python package/app being deployed (app.__version__)
      become: true
      become_user: "{{ deploy_user }}"
      shell:
        cmd: "python3 -c 'import {{ python_app }}; print({{ python_app }}.__version__)'"
        chdir: "{{ clone_root}}/{{ repo }}"
      register: python_app_version
      tags:
        - python
      when:
        - not python_version_file.stat.exists
        # alternately, could check if python_app_version.skipped is True

    - name: Set python app version as a fact
      set_fact:
        python_app_version: "{{ python_app_version.stdout }}"
