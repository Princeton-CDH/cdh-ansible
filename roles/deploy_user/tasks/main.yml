---
# tasks file for deploy_user
- name: Set up deploy user
  become: true
  tags:
    - setup
    - never
  block:
    - name: Ensure deploy user group exists with correct gid
      ansible.builtin.group:
        name: "{{ deploy_user }}"
        state: present
        gid:  "{{ deploy_user_uid }}"

    - name: Create deploy user
      ansible.builtin.user:
        name: "{{ deploy_user }}"
        groups:
          - "{{ deploy_user }}"
          - "{{ webapp_group }}"
        home: "/home/{{ deploy_user }}"
        shell: "{{ deploy_user_shell }}"
        uid: "{{ deploy_user_uid }}"
        group: "{{ deploy_user }}"   # primary group

    - name: Create bash profile
      ansible.builtin.template:
        src: "bash_profile.j2"
        dest: "/home/{{ deploy_user }}/.profile"
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"
        mode: 0600

    - name: Check to see if .ssh directory exists
      ansible.builtin.stat:
        path: "/home/{{ deploy_user }}/.ssh/"
      register: deploy_user_ssh_dir

    - name: Create the .ssh directory
      ansible.builtin.file:
        path: "/home/{{ deploy_user }}/.ssh/"
        state: directory
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"
        mode: 0700
      when: not deploy_user_ssh_dir.stat.exists

    - name: Install private ssh key
      ansible.builtin.copy:
        src: files/id_rsa
        dest: "/home/{{ deploy_user }}/.ssh/id_rsa"
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"
        mode: 0600

    - name: Add SSH public key
      ansible.posix.authorized_key:
        user: "{{ deploy_user }}"
        key: "{{ lookup('file', 'files/id_rsa.pub') }}"

    - name: Allow "authorized_key" files
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        backrefs: yes
        regexp: '^#AuthorizedKeysFile(.*?)$'
        line: 'AuthorizedKeysFile\1'

    - name: Allow deploy user to SSH
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        backrefs: yes
        regexp: '^AllowUsers(.*?)( ?)({{ deploy_user }})?$'
        line: 'AllowUsers\1 {{ deploy_user }}'
      notify:
        - Restart ssh

    # by default, handlers run at the end of the playbook; we need the ssh restart
    # to take effect for subsequent tasks
    - name: Flush handlers (trigger ssh restart if needed)
      ansible.builtin.meta: flush_handlers

    - name: Create pulsys bash alias file
      ansible.builtin.template:
        src: "pulsys_bash_alias.j2"
        dest: "/home/{{ ansible_user }}/.bash_aliases"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0600
      when: ansible_user != "root"

  rescue:
    - name: Close deployment as failed if error
      ansible.builtin.include_tasks: "{{ role_path }}/../create_deployment/tasks/fail.yml"
