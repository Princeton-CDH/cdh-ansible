---
# Default scenario: Tests cleanup functionality when auto_cleanup_deploys is enabled
scenario:
  name: default
  test_sequence:
    # 1. Start Docker container for testing
    - create
    # 2. Set up test environment (create fake deployments)
    - prepare
    # 3. Run the actual finalize_deploy role
    - converge
    # 4. Check that cleanup worked correctly
    - verify
    # 5. Clean up Docker container
    - destroy
# Use Docker to create test containers
driver:
  name: docker

# Define the test environment
platforms:
  - name: instance
    image: "ghcr.io/pulibrary/pul_containers:jammy_multi"
    command: "/lib/systemd/systemd"
    privileged: true
    cgroupns_mode: host
    tmpfs:
      - /run
      - /run/lock
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    environment:
      container: docker
    pre_build_image: true

# Configure how ansible runs our tests
provisioner:
  name: ansible
  log: true
  env:
    ANSIBLE_STDOUT_CALLBACK: yaml
    ANSIBLE_CALLBACKS_ENABLED: profile_tasks,profile_roles,timer
    ANSIBLE_FORCE_COLOR: "true"
    ANSIBLE_VERBOSITY: "2"
  config_options:
    defaults:
      roles_path: "$MOLECULE_PROJECT_DIRECTORY/.."
      allow_world_readable_tmpfiles: true
  inventory:
    host_vars:
      instance:
        install_root: "/tmp/ansible_cleanup_test"  # Test directory for deployments
        deploy_keep_count: 3                # Keep 3 recent deployments
        auto_cleanup_deploys: true          # Enable cleanup functionality
        deploy_user: root                   # Run as root in test container

# Use ansible verifier for verification tests
verifier:
  name: ansible