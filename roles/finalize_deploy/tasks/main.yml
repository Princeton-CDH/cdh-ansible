###
# This role runs all of the tasks needed to make the new code live,
# with handlers to restart nginx and cleanup old deployments.

# It assumes the standard configuration /srv/www symlinks to /var/www
# used in CDH Django projects.
---
- name: Do final configurations and restart webserver
  become: true
  become_user: "{{ deploy_user }}"
  block:
    - name: Create "next" symlink for any final steps before switching live
      ansible.builtin.file:
        src: "{{ deploy }}"
        dest: "{{ install_root }}/next"
        state: link
      tags:
        - never
        - final-pause

    - name: pause before switching live
      ansible.builtin.pause:
        prompt: "Do any steps needed before the new version is live, e.g., reindexing. (CTRL-C when done)"
      tags:
        - never
        - final-pause

    - name: Remove "next" symlink
      ansible.builtin.file:
        dest: "{{ install_root }}/next"
        state: absent
      tags:
        - never
        - final-pause

    - name: Check for "current" symlink; if present, save path
      ansible.builtin.stat:
        path: "{{ install_root }}/current"
      register: previous

    - name: Set current symlink
      ansible.builtin.file:
        src: "{{ deploy }}"
        dest: "{{ install_root }}/current"
        state: link

    - name: Create "current" symlink for new deploy
      ansible.builtin.stat:
        path: "{{ install_root }}/current"
      register: current

    - name: If deploy path differs from last "current", update "previous" symlink
      ansible.builtin.file:
        src: "{{ previous.stat.lnk_target }}"
        dest: "{{ install_root }}/previous"
        state: link
      when: >
        previous.stat.exists == True and
        previous.stat.lnk_source != current.stat.lnk_source

    - name: Register there is now a previous symlink
      ansible.builtin.stat:
        path: "{{ install_root }}/previous"
      register: previous

    # On Ubuntu we need to do this with an account that can access both /srv
    # and /var, so we need to be root
    # Update symlink and restart nginx when passenger is present
    - name: Update /var/www/ symlink to make the new version live
      become_user: root
      ansible.builtin.file:
        src: "{{ deploy }}"
        dest: "/var/www/{{ symlink }}"
        state: link
      notify: 
        - Restart nginx
        - Cleanup old deployments
      when: 
        - "'passenger' in ansible_role_names"
        - auto_cleanup_deploys

  rescue:
    - ansible.builtin.include_tasks: roles/create_deployment/tasks/fail.yml
