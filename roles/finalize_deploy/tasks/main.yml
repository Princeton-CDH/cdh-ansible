###
# This role runs all of the tasks needed to make the new code live except
# restarting Apache.

# It assumes the standard configuration /srv/www symlinks to /var/www
# used in CDH Django projects.
---
- name: Check for current symlink as previous
  stat:
    path: "{{ install_root }}/current"
  register: previous
- name: Set current symlink
  file:
    src: "{{ deploy }}"
    dest: "{{ install_root }}/current"
    state: link
- name: Register current symlink
  stat:
    path: "{{ install_root }}/current"
  register: current
- name: If current path differs from previous current, update previous
  file:
    src: "{{ previous.stat.lnk_target }}"
    dest: "{{ install_root }}/previous"
    state: link
  when: >
    previous.stat.exists == True and
    previous.stat.lnk_source != current.stat.lnk_source
- name: Register there is now a previous symlink
  stat:
    path: "{{ install_root }}/previous"
  register: previous
- name: >
        If previous did not exist (and therefore wasn't reset above),
        create it with current
# should only trigger on first run of deploy script
  file:
    src: "{{ deploy }}"
    dest: "{{ install_root }}/previous"
    state: link
  when: previous.stat.exists == False
- name: Set /var/www/ path to make live
  file:
    src: "{{ deploy }}"
    dest: "/var/www/{{ symlink }}"
    state: link

# This makes sure that any server side settings that handle autoconfiguring
# SELinux permissions (that we would otherwise need to be root for) are
# put in place on newly created directories

# It uses the shell modules rather than the SELinux or Apache modules
# because we only have limited sudo and rights for both these statements
- name: Call restorecon to set permissions for install_root
  shell: '/usr/sbin/restorecon -R {{ install_root }}'
  args:
    executable: /bin/bash
