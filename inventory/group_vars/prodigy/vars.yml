---
app_name: prodigy
application_url: https://test-prodigy.cdh.princeton.edu

python_version: "3.12"
# single deploy path - no versioning, no nesting
deploy: "{{ install_root }}"
current_deploy: "{{ install_root }}"  # no current/past, just a single deploy
python_app_path: "{{ deploy }}"
python_venv_prompt: "prodigy"
# use pip install with special index url to install with the configured license
python_extra_packages:
  - prodigy[company]
python_extra_packages_pip_extra_args: "--extra-index-url https://{{ prodigy_license }}@download.prodi.gy"

application_db_name: 'cdh_prodigy'
application_dbuser_name: 'cdh_prodigy'
application_dbuser_password: "{{ vault_db_password }}"

# this application does not need NFS but it does use TigerData
nfs_enabled: false
tigerdata_enabled: true

# image dir to serve out; must end in trailing slash
ppa_image_dir: "{{ tigerdata_mount_dir }}/prosody/ppa-images/"


# temporary recipe to test that prodigy is running and connecting to the db
prodigy_recipe: "ner.manual ner_news_headlines blank:en /srv/www/prodigy/news_headlines.jsonl --label PERSON,ORG,PRODUCT,LOCATION"

# configure prodigy to run via supervisor
supervisor_programs:
  - name: 'prodigy'
    command: "{{ install_root }}/env/bin/python -m prodigy {{ prodigy_recipe }}"
    state: present
    configuration: |
      directory={{ install_root }}
      environment=PRODIGY_CONFIG="{{ install_root }}/prodigy.json",PRODIGY_DEPLOYED_URL="{{ application_url }}"
      autostart=true
      autorestart=true
      startretries=1
      startsecs=1
      redirect_stderr=true
      stderr_logfile=/var/log/{{ app_name }}-err.log
      stdout_logfile=/var/log/{{ app_name }}-out.log
      user={{ deploy_user }}
      killasgroup=true
      stopasgroup=true

