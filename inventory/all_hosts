######
# The configuration of hosts depends on groups and child groups to ensure
# the least redundant configuration of group variables.
#
# The usual configuration stanza for a project will be to have a project_prod
# and project_staging (in the format of those already configured), followed by a
# stanza beginning [project:children], which groups the project environments.
# These correspond exactly to their entries in group_vars/.
#
# After the project declarations, you will find more global group:children
# declarations, such as [staging:children], which is the group that holds all
# global variables for staging deploys.
#
# Inheritance has some potential gotchas. All top level groups inherit from
# group_vars/all, but when two groups inherit from a group on the same level
# (i.e. staging and prosody), any overlapping variables are resolved with the
# group last in alphabetical order 'winning':
# See https://docs.ansible.com/ansible/2.5/user_guide/intro_inventory.html#how-variables-are-merged
######

[cdhweb_staging]
cdh-test-web1.princeton.edu
cdh-test-web2.princeton.edu

[cdhweb_production]
cdh-web1.princeton.edu
cdh-web2.princeton.edu

[cdhweb:children]
cdhweb_staging
cdhweb_production

[shxco_staging]
cdh-test-shxco1.princeton.edu
cdh-test-shxco2.princeton.edu
[shxco_production]
cdh-shxco1.princeton.edu
cdh-shxco2.princeton.edu

[shxco:children]
shxco_staging
shxco_production

[geniza_staging]
cdh-test-geniza1.princeton.edu
cdh-test-geniza2.princeton.edu
[geniza_production]
cdh-geniza1.princeton.edu
cdh-geniza2.princeton.edu

[geniza:children]
geniza_staging
geniza_production

[derrida_crawl_staging]
cdh-test-derrida-crawl1.princeton.edu

[derrida_archive_staging]
cdh-test-derrida1.princeton.edu
cdh-test-derrida2.princeton.edu

[derrida_archive_production]
cdh-derrida1.princeton.edu
cdh-derrida2.princeton.edu

[derrida_archive:children]
derrida_archive_staging
derrida_archive_production

[prosody_staging]
cdh-test-prosody1.princeton.edu
cdh-test-prosody2.princeton.edu

[prosody_production]
cdh-prosody1.princeton.edu
cdh-prosody2.princeton.edu

[prosody:children]
prosody_staging
prosody_production

[sandbox]
cdh-dev-sandbox1.princeton.edu

# simrisk must be configured in ssh config with bastion proxy command
[simrisk_cloud]
gcp_simrisk

[geotaste_cloud]
gcp_geotaste

### PUL solr servers

[solr_staging]
lib-solr-staging4d.princeton.edu
[solr_production]
lib-solr-prod7.princeton.edu

[solr9_staging]
lib-solr-staging1.princeton.edu

[solr9_production]
lib-solr-prod1.princeton.edu

[solr:children]
solr_staging
solr9_staging
solr_production
solr9_production

### environment-based stanzas to create shared groups

[prod:children]
cdhweb_production
geniza_production
shxco_production
prosody_production
derrida_archive_production

[staging:children]
cdhweb_staging
geniza_staging
shxco_staging
derrida_crawl_staging
derrida_archive_staging
prosody_staging
sandbox
simrisk_cloud
geotaste_cloud

[dev]
localhost
